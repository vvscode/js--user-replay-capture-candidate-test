(function(){var rootNode=document.body;var config={attributes:true,childList:true,subtree:true};var handlers={add:[],remove:[]};var observer=new MutationObserver(mutationObserverCb);observer.observe(rootNode,config);function mutationObserverCb(mutationsList){mutationsList.forEach(function(mutationsRecord){applyHandlersToNodeList(mutationsRecord.addedNodes,handlers.add);applyHandlersToNodeList(mutationsRecord.removedNodes,handlers.remove)})}function watchForAddedElements(selector,cb){return addHandler(handlers,"add",{selector:selector,cb:cb})}function watchForRemovedElements(selector,cb){return addHandler(handlers,"remove",{selector:selector,cb:cb})}var ELEMENT_NODE_TYPE=1;function isElement(node){if(!node){return false}if(node.nodeType===ELEMENT_NODE_TYPE&&typeof node.matches==="function"){return true}return false}function addHandler(handlersObject,handlerTypeName,handler){handlersObject[handlerTypeName].push(handler);return function removeHandler(){handlersObject[handlerTypeName]=handlersObject[handlerTypeName].filter(function(handler){return handler!==handler})}}function applyHandlersToNodeList(nodeList,handlersList){for(var i=0;i<nodeList.length;i++){var node=nodeList[i];if(!isElement(node)){continue}handlersList.forEach(function(handler){if(node.matches(handler.selector)){handler.cb.call(node)}})}}window.urCapture=window.urCapture||{};window.urCapture.watchForAddedElements=window.urCapture.watchForAddedElements||watchForAddedElements;window.urCapture.watchForRemovedElements=window.urCapture.watchForRemovedElements||watchForRemovedElements})();